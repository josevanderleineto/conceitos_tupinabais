import streamlit as st
import pandas as pd
import plotly.express as px

# Carregar dados
file_path = "Planilha.csv"
df = pd.read_csv(file_path)

# Adicionar estilo customizado para a largura da barra lateral
st.markdown("""
    <style>
    .css-1d391kg {
        width: 200px !important;
    }
    </style>
    """, unsafe_allow_html=True)

# T√≠tulo do aplicativo
st.title('üåü  Mapeamento de Conceitos sobre Culin√°ria e Meios de Subsist√™ncia dos Tupinamb√° de Oliven√ßa üåü')

# Barra lateral para sele√ß√£o de termo e outras op√ß√µes
st.sidebar.header('Op√ß√µes de Explora√ß√£o')
selected_term = st.sidebar.selectbox('Selecione um Termo:', df['Conceito'].unique())

# Adicionar a imagem t√≠pica da cultura Tupinamb√° na parte inferior da barra lateral
st.sidebar.image('https://imgs.search.brave.com/sBOhv8CMzJwXZJGc0hpuZZEjsgX_H7miZpxN5ADhyh0/rs:fit:860:0:0:0/g:ce/aHR0cHM6Ly9zdGF0/aWMucHJlcGFyYWVu/ZW0uY29tLzIwMjIv/MDgvcG92b3MtaW5k/aWdlbmFzLWJyYXNp/bC5qcGc', use_column_width=True)

# Se√ß√£o principal
st.header(f'üîç Detalhes do Termo: {selected_term}')
filtered_df = df[df['Conceito'] == selected_term]

if not filtered_df.empty:
    st.write(f"**Defini√ß√£o:** {filtered_df.iloc[0]['Defini√ß√£o']}")
    st.write(f"**Termos Alternativos:** {filtered_df.iloc[0]['Termos Alternativos']}")
    st.write(f"**Rela√ß√£o:** {filtered_df.iloc[0]['Rela√ß√£o']}")
    st.write(f"**Categoria:** {filtered_df.iloc[0]['Categoria']}")

    # Verificar se as colunas necess√°rias existem
    if 'Rela√ß√£o' in filtered_df.columns and 'Valor' in filtered_df.columns and 'Categoria' in filtered_df.columns:
        # Exemplo de gr√°fico interativo com Plotly
        st.write("### Visualiza√ß√£o da Rela√ß√£o")
        fig = px.bar(filtered_df, x='Rela√ß√£o', y='Valor', color='Categoria', 
                     labels={'Rela√ß√£o': 'Rela√ß√µes', 'Valor': 'Valores'},
                     title=f'Rela√ß√µes para o termo: {selected_term}')
        st.plotly_chart(fig)
    # A mensagem de dados n√£o dispon√≠veis foi removida

else:
    st.write("Termo n√£o encontrado.")

# Mostrar a tabela completa no final
st.write('### Tabela Completa')
st.dataframe(df)
